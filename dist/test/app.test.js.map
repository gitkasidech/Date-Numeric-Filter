{"version":3,"sources":["../../src/test/app.test.js"],"names":["require","main","moment","test","input","data","Internet","type","value","unit","expect","toBe","format","weekday","thisdayUnit","day","nextThisday","parseInt","thismonth","month","thisday","date","set"],"mappings":"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","file":"app.test.js","sourcesContent":["const {main} = require('../controller/app')\r\nconst moment = require('moment')\r\ntest('checkcase single_Internet', () => {\r\n    const input = [\"4GB\"]\r\n    let data = {\r\n        Internet:{ \r\n            type: \"single\", \r\n            value: \"4\", \r\n            unit: \"GB\" \r\n        }\r\n    }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single_Other', () => {\r\n    const input = [\"3 ประเทศ\"]\r\n    let data = {\r\n        \"Other\": {\r\n            \"type\": \"single\",\r\n            \"value\": \"3\",\r\n            \"unit\": \"country\"\r\n        }\r\n    } \r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singlePrice_Money', () => {\r\n    const input = [\"ราคา 399\"]\r\n    let data = {\r\n        \"Money\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"399\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single_Money', () => {\r\n    const input = [\"6 บาท\"]\r\n    let data = {\r\n        \"Money\": {\r\n            \"type\": \"single\",\r\n            \"value\": \"6\",\r\n            \"unit\": \"bath\"\r\n        }\r\n    }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single_Date', () => {\r\n    const input = [\"10 วัน\"]\r\n    let data = {\r\n        \"Date_Time\": {\r\n            \"type\": \"single\",\r\n            \"value\": \"10\",\r\n            \"unit\": \"day\"\r\n        }\r\n    }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleNow_Date', () => {\r\n    const input = [\"ตอนนี้\"]\r\n    let data = {\r\n        \"Date_Time\": {\r\n          \"type\": \"single\",\r\n          \"value\": moment().format('ddd,DD-MM-YYYY HH:mm'),\r\n          \"unit\": \"datetime\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase betweenWeek1_Date', () => {\r\n    const input = [\"สัปดาห์หน้า\"]\r\n    let data = {\r\n        \"Date_Time\": {\r\n          \"type\": \"between\",\r\n          \"start\": {\r\n            \"value\": moment().weekday(7).format('ddd,DD-MM-YYYY'),\r\n            \"unit\": \"week\"\r\n          },\r\n          \"end\": {\r\n            \"value\": moment().weekday(7+6).format('ddd,DD-MM-YYYY'),\r\n            \"unit\": \"week\"\r\n          }\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase betweenWeek2_Date', () => {\r\n    const input = [\"อาทิตย์หน้า\"]\r\n    let data = {\r\n        \"Date_Time\": {\r\n          \"type\": \"between\",\r\n          \"start\": {\r\n            \"value\": moment().weekday(7).format('ddd,DD-MM-YYYY'),\r\n            \"unit\": \"week\"\r\n          },\r\n          \"end\": {\r\n            \"value\": moment().weekday(7+6).format('ddd,DD-MM-YYYY'),\r\n            \"unit\": \"week\"\r\n          }\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleNextSat_Date', () => {\r\n    const input = [\"เสาร์หน้า\"]\r\n    let thisdayUnit = moment().day(\"Saturday\")\r\n    let day = thisdayUnit.format(\"e\")\r\n    let nextThisday = moment().weekday(7+parseInt(day))\r\n    let data = {\r\n        \"Date_Time\": {\r\n          \"type\": \"single\",\r\n          \"value\": nextThisday.format('ddd,DD-MM-YYYY'),\r\n          \"unit\": \"day\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleNextMonth_Date', () => {\r\n    const input = [\"เดือนหน้า\"]\r\n    let thismonth = moment().format(\"M\")\r\n    let data =  {\r\n        \"Date_Time\": {\r\n          \"type\": \"single\",\r\n          \"value\": moment().month(parseInt(thismonth)).format(\"MMMM\"),\r\n          \"unit\": \"month\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleWeek1_Date', () => {\r\n    const input = [\"1อาทิตย์\"]\r\n    let data =  {\r\n        \"Date_Time\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"1\",\r\n          \"unit\": \"week\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleMonth_Date', () => {\r\n    const input = [\"1เดือน\"]\r\n    let data =  {\r\n        \"Date_Time\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"1\",\r\n          \"unit\": \"month\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleThisSat_Date', () => {\r\n    const input = [\"วันเสาร์นี้\"]\r\n    let thisdayUnit = moment().day(\"Saturday\")\r\n    let data =  {\r\n        \"Date_Time\": {\r\n          \"type\": \"single\",\r\n          \"value\": thisdayUnit.format('ddd,DD-MM-YYYY'),\r\n          \"unit\": \"day\"\r\n        }\r\n    }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleTomorrow_Date', () => {\r\n    const input = [\"พรุ่งนี้\"]\r\n    let thisday = moment().date()\r\n    let data =  {\r\n        \"Date_Time\": {\r\n          \"type\": \"single\",\r\n          \"value\": moment().set('date', thisday+1).format('ddd,DD-MM-YYYY'),\r\n          \"unit\": \"day\"\r\n        }\r\n    }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase conditionMoreThan_Date', () => {\r\n    const input = [\"หลายวัน\"]\r\n    let data =   {\r\n        \"Date_Time\": {\r\n          \"type\": \"condition\",\r\n          \"condition\": \"more_than\",\r\n          \"value\": \"1\",\r\n          \"unit\": \"day\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleWeek2_Date', () => {\r\n    const input = [\"3 สัปดาห์\"]\r\n    let data =   {\r\n        \"Date_Time\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"3\",\r\n          \"unit\": \"week\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase betweenDay_Date', () => {\r\n    const input = [\"4-5 วัน\"]\r\n    let data =   {\r\n        \"Date_Time\": {\r\n          \"type\": \"between\",\r\n          \"start\": {\r\n            \"value\": \"4\",\r\n            \"unit\": \"day\"\r\n          },\r\n          \"end\": {\r\n            \"value\": \"5\",\r\n            \"unit\": \"day\"\r\n          }\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase betweenMoreLess_Date', () => {\r\n    const input = [\"20กว่าวัน\"]\r\n    let data =   {\r\n        \"Date_Time\": {\r\n          \"type\": \"between\",\r\n          \"start\": {\r\n            \"value\": \"21\",\r\n            \"unit\": \"day\"\r\n          },\r\n          \"end\": {\r\n            \"value\": \"29\",\r\n            \"unit\": \"day\"\r\n          }\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singlePriceComma_Money', () => {\r\n    const input = [\"ราคา1,990\"]\r\n    let data =   {\r\n        \"Money\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"1,990\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single_Number', () => {\r\n    const input = [\"899\"]\r\n    let data =    {\r\n        \"Number\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"899\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single*3*3#_Phone', () => {\r\n    const input = [\"*777*903#\"]\r\n    let data =   {\r\n        \"Phone\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"*777*903#\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase ratioBath/Week_Money', () => {\r\n    const input = [\"144 บาท/อาทิตย์\"]\r\n    let data =   {\r\n        \"Money\": {\r\n          \"type\": \"ratio\",\r\n          \"first\": {\r\n            \"value\": \"144\",\r\n            \"unit\": \"bath\"\r\n          },\r\n          \"last\": {\r\n            \"value\": \"1\",\r\n            \"unit\": \"week\"\r\n          }\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase ratioBath/Day_Money', () => {\r\n    const input = [\"15 บาท/วัน\"]\r\n    let data =   {\r\n        \"Money\": {\r\n          \"type\": \"ratio\",\r\n          \"first\": {\r\n            \"value\": \"15\",\r\n            \"unit\": \"bath\"\r\n          },\r\n          \"last\": {\r\n            \"value\": \"1\",\r\n            \"unit\": \"day\"\r\n          }\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleMin_Date', () => {\r\n    const input = [\"60 นาที\"]\r\n    let data =   {\r\n        \"Date_Time\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"60\",\r\n          \"unit\": \"minute\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleMessage_Phone', () => {\r\n    const input = [\"50 ข้อความ\"]\r\n    let data =   {\r\n        \"Phone\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"50\",\r\n          \"unit\": \"message\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleBaht_Money', () => {\r\n    const input = [\"19 Baht\"]\r\n    let data =   {\r\n        \"Money\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"19\",\r\n          \"unit\": \"bath\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single*3*3#_Phone', () => {\r\n    const input = [\"*777*148#\"]\r\n    let data =   {\r\n        \"Phone\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"*777*148#\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single*3*3*6#_Phone', () => {\r\n    const input = [\"*777*784*151197#\"]\r\n    let data =   {\r\n        \"Phone\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"*777*784*151197#\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase betweenBath_Money', () => {\r\n    const input = [\"40 กว่าบาท\"]\r\n    let data =   {\r\n        \"Money\": {\r\n          \"type\": \"between\",\r\n          \"start\": {\r\n            \"value\": \"41\",\r\n            \"unit\": \"bath\"\r\n          },\r\n          \"end\": {\r\n            \"value\": \"49\",\r\n            \"unit\": \"bath\"\r\n          }\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleNoValue_Internet', () => {\r\n    const input = [\"เป็น GB\"]\r\n    let data =   {\r\n        \"Internet\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"1\",\r\n          \"unit\": \"GB\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase conditionNotMoreThan_Number', () => {\r\n    const input = [\"ไม่เกิน 100\"]\r\n    let data =   {\r\n        \"Number\": {\r\n          \"type\": \"condition\",\r\n          \"condition\": \"notmore_than\",\r\n          \"value\": \"100\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleMapThaiWordGB_Internet', () => {\r\n    const input = [\"1กิ้ก\"]\r\n    let data =   {\r\n        \"Internet\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"1\",\r\n          \"unit\": \"GB\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleMB_Internet', () => {\r\n    const input = [\"500MB\"]\r\n    let data =   {\r\n        \"Internet\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"500\",\r\n          \"unit\": \"MB\"\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase ratioUnit/Month_Number', () => {\r\n    const input = [\"เดือนละ1500\"]\r\n    let data =   {\r\n        \"Number\": {\r\n          \"type\": \"ratio\",\r\n          \"first\": {\r\n            \"value\": \"1500\"\r\n          },\r\n          \"last\": {\r\n            \"value\": \"1\",\r\n            \"unit\": \"month\"\r\n          }\r\n        }\r\n      }\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase 2 single_Date', () => {\r\n    const input = [\"1วัน\",\"3วัน\"]\r\n    let data =   [{\r\n        \"Date_Time\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"1\",\r\n          \"unit\": \"day\"\r\n        }\r\n      },\r\n      {\r\n        \"Date_Time\": {\r\n          \"type\": \"single\",\r\n          \"value\": \"3\",\r\n          \"unit\": \"day\"\r\n        }\r\n      }]   \r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase ratioBath/Day_Money & singleMessage_Phone', () => {\r\n    const input = [\"15 บาท/วัน\",\"50 ข้อความ\"]\r\n    let data =   [{\"Money\":{\"type\":\"ratio\",\"first\":{\"value\":\"15\",\"unit\":\"bath\"},\"last\":{\"value\":\"1\",\"unit\":\"day\"}}},{\"Phone\":{\"type\":\"single\",\"value\":\"50\",\"unit\":\"message\"}}]   \r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase conditionMoreThan5p.m_Date', () => {\r\n    const input = [\"หลัง 5 โมง\"]\r\n    let data =   {\r\n        \"Date_Time\": {\r\n          \"type\": \"condition\",\r\n          \"condition\": \"more_than\",\r\n          \"value\": \"17:00\",\r\n          \"unit\": \"morning_afternoon\"\r\n        }\r\n      }\r\n    \r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase ratioBath/ManyDay_Money', () => {\r\n    const input = [\"5 บาท / 2 วัน\"]\r\n    let data = {\"Money\":{\"type\":\"ratio\",\"first\":{\"value\":\"5\",\"unit\":\"bath\"},\"last\":{\"value\":\"2\",\"unit\":\"day\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single*3*4#_Phone', () => {\r\n    const input = [\"*777*4005#\"]\r\n    let data = {\"Phone\":{\"type\":\"single\",\"value\":\"*777*4005#\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase betweenTime_Date', () => {\r\n    const input = [\"05.00 - 17.00น.\"]\r\n    let data = {\"Date_Time\":{\"type\":\"between\",\"start\":{\"value\":\"05:00\",\"unit\":\"time\"},\"end\":{\"value\":\"17:00\",\"unit\":\"time\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleAllDay_Date', () => {\r\n    const input = [\"ทั้งวัน\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"1\",\"unit\":\"day\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleMbps_Date', () => {\r\n    const input = [\"1Mbps\"]\r\n    let data = {\"Internet\":{\"type\":\"single\",\"value\":\"1\",\"unit\":\"Mbps\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase ratioSatang/Min_Date', () => {\r\n    const input = [\"นาทีละ 25 สต.\"]\r\n    let data = {\"Money\":{\"type\":\"ratio\",\"first\":{\"value\":\"25\",\"unit\":\"satang\"},\"last\":{\"value\":\"1\",\"unit\":\"minute\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleHour_Date & singleDay_Date', () => {\r\n    const input = [\"24 ชม.\",\"7 วัน\"]\r\n    let data = [{\"Date_Time\":{\"type\":\"single\",\"value\":\"24\",\"unit\":\"hour\"}},{\"Date_Time\":{\"type\":\"single\",\"value\":\"7\",\"unit\":\"day\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase single1Day_Date', () => {\r\n    const input = [\"วันเดียว\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"1\",\"unit\":\"day\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single4digitBath_Money', () => {\r\n    const input = [\"1500บาท\"]\r\n    let data = {\"Money\":{\"type\":\"single\",\"value\":\"1500\",\"unit\":\"bath\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single1.5GB_Internet', () => {\r\n    const input = [\"1.5GB\"]\r\n    let data = {\"Internet\":{\"type\":\"single\",\"value\":\"1.5\",\"unit\":\"GB\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleMB_Internet & singleHour_Date', () => {\r\n    const input = [\"500MB\",\"24ชั่วโมง\"]\r\n    let data = [{\"Internet\":{\"type\":\"single\",\"value\":\"500\",\"unit\":\"MB\"}},{\"Date_Time\":{\"type\":\"single\",\"value\":\"24\",\"unit\":\"hour\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase singleBath_Money & singleMbps_Internet', () => {\r\n    const input = [\"99 บาท\",\"1mbps\"]\r\n    let data = [{\"Money\":{\"type\":\"single\",\"value\":\"99\",\"unit\":\"bath\"}},{\"Internet\":{\"type\":\"single\",\"value\":\"1\",\"unit\":\"Mbps\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase singleNoValueWeek_Date', () => {\r\n    const input = [\"สัปดาห์\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"1\",\"unit\":\"week\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase ratioBath/Week_Money2', () => {\r\n    const input = [\"59 บาท/สัปดาห์\"]\r\n    let data = {\"Money\":{\"type\":\"ratio\",\"first\":{\"value\":\"59\",\"unit\":\"bath\"},\"last\":{\"value\":\"1\",\"unit\":\"week\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase conditionNotMoreThanBath_Money', () => {\r\n    const input = [\"ไม่เกิน5บาท\"]\r\n    let data = {\"Money\":{\"type\":\"condition\",\"condition\":\"notmore_than\",\"value\":\"5\",\"unit\":\"bath\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleNoValueMonth_Date', () => {\r\n    const input = [\"เดือน\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"1\",\"unit\":\"month\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase ratioNoValueBothBath/Min_Money', () => {\r\n    const input = [\"นาทีละบาท\"]\r\n    let data = {\"Money\":{\"type\":\"ratio\",\"first\":{\"value\":\"1\",\"unit\":\"bath\"},\"last\":{\"value\":\"1\",\"unit\":\"minute\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase betweenToMidnight_Date', () => {\r\n    const input = [\"ถึงเที่ยงคืน\"]\r\n    let data = {\"Date_Time\":{\"type\":\"between\",\"start\":{\"value\":\"01:00\",\"unit\":\"time\"},\"end\":{\"value\":\"24:00\",\"unit\":\"time\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase ratioBath/Day_Money & ratioSatang/Min_Money', () => {\r\n    const input = [\"7 บาท/วัน\",\"นาทีละ 7 สต\"]\r\n    let data = [{\"Money\":{\"type\":\"ratio\",\"first\":{\"value\":\"7\",\"unit\":\"bath\"},\"last\":{\"value\":\"1\",\"unit\":\"day\"}}},{\"Money\":{\"type\":\"ratio\",\"first\":{\"value\":\"7\",\"unit\":\"satang\"},\"last\":{\"value\":\"1\",\"unit\":\"minute\"}}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase ratioBath/Day_Money & singleSatang_Money', () => {\r\n    const input = [\"7 บาท/วัน\",\"35 สต.\"]\r\n    let data = [{\"Money\":{\"type\":\"ratio\",\"first\":{\"value\":\"7\",\"unit\":\"bath\"},\"last\":{\"value\":\"1\",\"unit\":\"day\"}}},{\"Money\":{\"type\":\"single\",\"value\":\"35\",\"unit\":\"satang\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase conditionNotMoreThanBath_Money & conditionNotLessThanGB_Internet', () => {\r\n    const input = [\"ไม่เกิน 50 บาท\",\"2GB ขึ้นไป\"]\r\n    let data = [{\"Money\":{\"type\":\"condition\",\"condition\":\"notmore_than\",\"value\":\"50\",\"unit\":\"bath\"}},{\"Internet\":{\"type\":\"condition\",\"condition\":\"notless_than\",\"value\":\"2\",\"unit\":\"GB\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase conditionNotLessThanGB_Internet', () => {\r\n    const input = [\"3GB ขึ้น\"]\r\n    let data = {\"Internet\":{\"type\":\"condition\",\"condition\":\"notless_than\",\"value\":\"3\",\"unit\":\"GB\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleAllWeek_Date', () => {\r\n    const input = [\"ทั้งสัปดาห์\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"1\",\"unit\":\"week\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase ratioBath/Min_Money NoValue', () => {\r\n    const input = [\"นาที 20 บาท\"]\r\n    let data = {\"Money\":{\"type\":\"ratio\",\"first\":{\"value\":\"20\",\"unit\":\"bath\"},\"last\":{\"value\":\"1\",\"unit\":\"minute\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase conditionSince_Date', () => {\r\n    const input = [\"ตั้งแต่ตีห้า\"]\r\n    let data = {\"Date_Time\":{\"type\":\"condition\",\"condition\":\"notless_than\",\"value\":\"05:00\",\"unit\":\"time\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase conditionManyGB_Date NoValue+Thiaword', () => {\r\n    const input = [\"หลายๆกิ๊ก\"]\r\n    let data = {\"Internet\":{\"type\":\"condition\",\"condition\":\"more_than\",\"value\":\"1\",\"unit\":\"GB\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase between2Unit_Date', () => {\r\n    const input = [\"ตี 5 - 5 โมงเย็น\"]\r\n    let data = {\"Date_Time\":{\"type\":\"between\",\"start\":{\"value\":\"05:00\",\"unit\":\"time\"},\"end\":{\"value\":\"17:00\",\"unit\":\"time\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase between2Unit_Date NoValue', () => {\r\n    const input = [\"ตีห้าถึงห้าโมงเย็น\"]\r\n    let data = {\"Date_Time\":{\"type\":\"between\",\"start\":{\"value\":\"05:00\",\"unit\":\"time\"},\"end\":{\"value\":\"17:00\",\"unit\":\"time\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleB_Money & singlekbps_Internet', () => {\r\n    const input = [\"89B\",\"512Kbps\"]\r\n    let data = [{\"Money\":{\"type\":\"single\",\"value\":\"89\",\"unit\":\"bath\"}},{\"Internet\":{\"type\":\"single\",\"value\":\"512\",\"unit\":\"kbps\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase singleHr_Money & singleBath_Internet', () => {\r\n    const input = [\"24 ชม\",\"299 บาท\"]\r\n    let data = [{\"Date_Time\":{\"type\":\"single\",\"value\":\"24\",\"unit\":\"hour\"}},{\"Money\":{\"type\":\"single\",\"value\":\"299\",\"unit\":\"bath\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase single1Year_Date', () => {\r\n    const input = [\"1 ปี\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"1\",\"unit\":\"year\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single_Number & singleMin_Date & singleGB_Internet', () => {\r\n    const input = [\"349\",\"400 นาที\",\"27 gb\"]\r\n    let data = [{\"Number\":{\"type\":\"single\",\"value\":\"349\"}},{\"Date_Time\":{\"type\":\"single\",\"value\":\"400\",\"unit\":\"minute\"}},{\"Internet\":{\"type\":\"single\",\"value\":\"27\",\"unit\":\"GB\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase conditionratioPrice/Month_Money Cheap', () => {\r\n    const input = [\"ถูกๆกว่า399 /เดือน\"]\r\n    let data = {\"Money\":{\"type\":\"condition\",\"condition\":\"less_than\",\"first\":{\"value\":\"399\"},\"last\":{\"value\":\"1\",\"unit\":\"month\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleMin_Date & singleBath_Money', () => {\r\n    const input = [\"2,560 นาที\",\"999 บาท\"]\r\n    let data = [{\"Date_Time\":{\"type\":\"single\",\"value\":\"2,560\",\"unit\":\"minute\"}},{\"Money\":{\"type\":\"single\",\"value\":\"999\",\"unit\":\"bath\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase conditionMessage_Phone notmore_than', () => {\r\n    const input = [\"ไม่เกิน 5 ข้อความ\"]\r\n    let data = {\"Phone\":{\"type\":\"condition\",\"condition\":\"notmore_than\",\"value\":\"5\",\"unit\":\"message\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase conditionMessage_Phone more_than', () => {\r\n    const input = [\"เกิน10ข้อความ\"]\r\n    let data = {\"Phone\":{\"type\":\"condition\",\"condition\":\"more_than\",\"value\":\"10\",\"unit\":\"message\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleBath_Money บ', () => {\r\n    const input = [\"488 บ\"]\r\n    let data = {\"Money\":{\"type\":\"single\",\"value\":\"488\",\"unit\":\"bath\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singlekbps_Internet ', () => {\r\n    const input = [\"512 kbps\"]\r\n    let data = {\"Internet\":{\"type\":\"single\",\"value\":\"512\",\"unit\":\"kbps\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase conditionMessage_Phone more_than', () => {\r\n    const input = [\"มากกว่า 100 ข้อความ\"]\r\n    let data = {\"Phone\":{\"type\":\"condition\",\"condition\":\"more_than\",\"value\":\"100\",\"unit\":\"message\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase betweenTime_Date โมง-ทุ่ม', () => {\r\n    const input = [\"5 โมงเย็น - 4 ทุ่ม\"]\r\n    let data = {\"Date_Time\":{\"type\":\"between\",\"start\":{\"value\":\"17:00\",\"unit\":\"time\"},\"end\":{\"value\":\"22:00\",\"unit\":\"time\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase conditionGB_Internet หลายๆ', () => {\r\n    const input = [\"หลายๆGB\"]\r\n    let data = {\"Internet\":{\"type\":\"condition\",\"condition\":\"more_than\",\"value\":\"1\",\"unit\":\"GB\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singlePercent_Number %', () => {\r\n    const input = [\"50%\"]\r\n    let data = {\"Number\":{\"type\":\"single\",\"value\":\"50\",\"unit\":\"percent\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single*3_Phone', () => {\r\n    const input = [\"*138\"]\r\n    let data = {\"Phone\":{\"type\":\"single\",\"value\":\"*138\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase betweenTime_Date ทุ่ม-โมง', () => {\r\n    const input = [\"3 ทุ่ม - 4 โมงเย็น\"]\r\n    let data = {\"Date_Time\":{\"type\":\"between\",\"start\":{\"value\":\"21:00\",\"unit\":\"time\"},\"end\":{\"value\":\"16:00\",\"unit\":\"time\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase between_Number กว่า', () => {\r\n    const input = [\"10กว่า\"]\r\n    let data = {\"Number\":{\"type\":\"between\",\"start\":{\"value\":\"11\"},\"end\":{\"value\":\"19\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase conditionGB_Internet more_than & condition_Number notmore_than', () => {\r\n    const input = [\"หลายๆGB\",\"ไม่เกิน1,000\"]\r\n    let data = [{\"Internet\":{\"type\":\"condition\",\"condition\":\"more_than\",\"value\":\"1\",\"unit\":\"GB\"}},{\"Number\":{\"type\":\"condition\",\"condition\":\"notmore_than\",\"value\":\"1,000\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase singleTime_Date ตี', () => {\r\n    const input = [\"ตี 4\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"04:00\",\"unit\":\"time\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase between_Number', () => {\r\n    const input = [\"4.00-7.00\"]\r\n    let data = {\"Number\":{\"type\":\"between\",\"start\":{\"value\":\"4.00\"},\"end\":{\"value\":\"7.00\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleDay_Date asNumber', () => {\r\n    const input = [\"สามวัน\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"3\",\"unit\":\"day\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleGB_Internet G', () => {\r\n    const input = [\"32G\"]\r\n    let data = {\"Internet\":{\"type\":\"single\",\"value\":\"32\",\"unit\":\"GB\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleMonth_Date หน้า', () => {\r\n    const input = [\"10 เดือนหน้า\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"August\",\"unit\":\"month\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single_Date มิถุนายน', () => {\r\n    const input = [\"13 มิถุนายน 2560\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"Tue,13-06-2017\",\"unit\":\"date\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singlePercent_Number % & singleBath_Money ฿', () => {\r\n    const input = [\"50%\",\"499฿\"]\r\n    let data = [{\"Number\":{\"type\":\"single\",\"value\":\"50\",\"unit\":\"percent\"}},{\"Money\":{\"type\":\"single\",\"value\":\"499\",\"unit\":\"bath\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase single_Date ../../.. & betweenTime_Date ..:..', () => {\r\n    const input = [\"03/09/17\",\"04:00-07:00\"]\r\n    let data = [{\"Date_Time\":{\"type\":\"single\",\"value\":\"Sun,03-09-2017\",\"unit\":\"date\"}},{\"Date_Time\":{\"type\":\"between\",\"start\":{\"value\":\"04:00\",\"unit\":\"time\"},\"end\":{\"value\":\"07:00\",\"unit\":\"time\"}}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})\r\n\r\ntest('checkcase ratioBath/Week_Money บาทต่อสัปดาห์', () => {\r\n    const input = [\"99 บาทต่อสัปดาห์\"]\r\n    let data = {\"Money\":{\"type\":\"ratio\",\"first\":{\"value\":\"99\",\"unit\":\"bath\"},\"last\":{\"value\":\"1\",\"unit\":\"week\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleTime_Date โมง', () => {\r\n    const input = [\"9 โมง\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"09:00\",\"unit\":\"time\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleDay_Date เมื่อวาน', () => {\r\n    const input = [\"เมื่อวาน\"]\r\n    let thisday = moment().date()\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":moment().set('date', thisday-1).format('ddd,DD-MM-YYYY'),\"unit\":\"day\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleMessage_Phone MMS', () => {\r\n    const input = [\"30 MMS\"]\r\n    let data = {\"Phone\":{\"type\":\"single\",\"value\":\"30\",\"unit\":\"message\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singlePiece_Other ใบ', () => {\r\n    const input = [\"1 ใบ\"]\r\n    let data = {\"Other\":{\"type\":\"single\",\"value\":\"1\",\"unit\":\"piece\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleTime_Date บ่าย,NoValue', () => {\r\n    const input = [\"บ่ายสาม\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\":\"15:00\",\"unit\":\"time\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase betweenDay_Date ไม่กี่', () => {\r\n    const input = [\"ไม่กี่วัน\"]\r\n    let data = {\"Date_Time\":{\"type\":\"between\",\"start\":{\"value\":\"2\",\"unit\":\"day\"},\"end\":{\"value\":\"7\",\"unit\":\"day\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleDay_Date ที่ผ่านมา', () => {\r\n    const input = [\"วันเสาร์ที่ผ่านมา\"]\r\n    let thisdayUnit = moment().day(\"Saturday\")\r\n    let thisday = moment().day()\r\n    let day = thisdayUnit.format(\"e\")\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\": moment().weekday(parseInt(thisday)-parseInt(day)).format('ddd,DD-MM-YYYY'),\"unit\":\"day\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleNumber_Phone เบอร์', () => {\r\n    const input = [\"1เบอร์\"]\r\n    let data = {\"Phone\":{\"type\":\"single\",\"value\":\"1\",\"unit\":\"number\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase betweenDateTime_Date เมื่อวานตอนเช้า', () => {\r\n    const input = [\"เมื่อวานตอนเช้า\"]\r\n    let thisday = moment().date()\r\n    let data = {\"Date_Time\":{\"type\":\"between\",\"start\":{\"value\":moment().set('date', thisday - 1).format('ddd,DD-MM-YYYY')+\" 6:00\",\"unit\":\"dateTime\"},\"end\":{\"value\":moment().set('date', thisday - 1).format('ddd,DD-MM-YYYY')+\" 11:00\",\"unit\":\"dateTime\"}}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase singleDateTime_Date ตอนนี้,โมง', () => {\r\n    const input = [\"ตอนนี้ 9 โมง\"]\r\n    let data = {\"Date_Time\":{\"type\":\"single\",\"value\": moment().format('ddd,DD-MM-YYYY ')+\"9:00\",\"unit\":\"datetime\"}}\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify([data]))\r\n})\r\n\r\ntest('checkcase single_Date ../../.... & singleTime_Date ..:..ตี', () => {\r\n    const input = [\"17/07/2016\",\"08:34\"]\r\n    let data = [{\"Date_Time\":{\"type\":\"single\",\"value\":\"Sun,17-07-2016\",\"unit\":\"date\"}},{\"Date_Time\":{\"type\":\"single\",\"value\":\"08:34\",\"unit\":\"time\"}}]\r\n    expect(JSON.stringify(main(input))).toBe(JSON.stringify(data))\r\n})"]}